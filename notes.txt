1. All the csv files uploaded to any script (interp, ortho_sel, visualize) have to include column labels with wavelengths 
2. If the visualization of reflectances includes a first bright square and the rest are dark, the algorithm counts the first row (labels of wavelength) as actual data 


Questions: 
- Do we need to normalize reflectances? Show Munsell.png 

TO DO: 
- Test with selecting 93 reflectances 
- Revisualize the color charts from custom databases üõ†Ô∏è 
- Write the spctral sensitivity reconstruction script (decide on the structure of the script) üõ†Ô∏è
----------------------------------------------------------------------------------------------
Preprocessing: 
- transpose.py: input.csv --> output.csv ‚úîÔ∏è
- add_col_labels.py: input.csv --> output.csv, -b --bounds start end step (Default 400, 700, 10) ‚úîÔ∏è
- interp.py: input.csv, waves.csv --> output.csv -p plot.pdf ‚úîÔ∏è

Visualization: 
- plot_data.py: input.csv --> output.pdf ‚úîÔ∏è
- plot_imgs.py: infolder\*.png --> output.pdf --ask Grigory if he thinks its necessary ‚úîÔ∏è
- compute_rgbs.py --> output.pdf ‚úîÔ∏è
- vis_chart.py: rgbs.csv -r 3 -c 6 [default: r = 1, col = -1] --> chart.pdf -- Save to PDf ‚úîÔ∏è

Selection: 
- select_refls: R_DB.csv, num_rows --> output.csv [--method mincos] ‚úîÔ∏è
- evaluate.py: R.csv --> metrix.toml ‚úîÔ∏è
- noise.py: use np.lstsq(RL, I+noise) üõ†Ô∏è

---------------------------------------------------------------------------------------------
For documentation: 
- Main assumption: data always inludes a header (column labels)

For development: 
- Make the light cli arg optional 
- plot_data.py: give an option to use plt.show()
-vis_chart.py:  line 30: #GIVE AN OPTION TO RESIZE AN IMAGE (NO NEED TO ZOOM IN); line 37: #ADD AS A VIS_EXPONENT PARAMETER WITH 1 AS A DEFAULT 
- evaluate.py: line 14: make the toml file optional; dump in the terminal 
-Think about calling vis_chart and evalueate in a loop for the entire folder 
- Cli arg: number of digits 